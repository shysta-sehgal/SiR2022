Harm & Seidenberg 1999

Within this folder are the files needed to run instantiations of the reading model reported in Harm & Seidenberg, 1999 (see H&S99.pdf). This can only be achieved on machines in which MikeNet has already been installed (see README_MikenetInstall.txt).

Below is a description of each file and instructions for their use.

3k_99_trans: a small 3000 word corpus that can be used to train and test the reading model (NOTE a 6000 word corpus is used in HS99).

mkpat_hear99_hs.awk: is an awk script that coverts a corpus with the structure defined within 3k_99_trans into pattern files that can be used to train and test the HS99 model on hearing tasks (i.e. phonology to phonology). Run the script using a line of code such as: awk -f mkpat_hear99_hs.awk 3k_99_trans > 3k_99_trans_hear.pat

mkpat_read99_hs.awk: is an awk script that coverts a corpus with the structure defined within 3k_99_trans into pattern files that can be used to train and test the HS99 model on reading tasks (i.e. orthography to phonology). Run the script using a line of code such as: awk -f mkpat_read99_hs.awk 3k_99_trans > 3k_99_trans_read.pat

LitModel.c: this c script builds and trains a network similar to that reported in HS99 that simply maps either from phonology to phonology or from orthography to phonology. It requires pattern files of the structure generated by the awk files above. To run the model use a line of code similar to: ./LitModel -seed RANDOM_SEED -epsilon LEARNING_RATE -iters NUMBER_OF_ITERATIONS > NAME_OF_OUTPUTFILE.dat. The script will output the error rate every 10000 trials and a weight matrix of the trained network every 100000 trials.

evaluatorLit.c: this c script tests a network of the form defined in LitModel.c on both hearing (phonology to phonology) and reading (orthography to phonology) tasks. It requires a weight matrix as generated by LitModel.c and the pattern files used to train the network. The output file contains a row for each test trial in the hearing and reading pattern files. Each row contains the following columns: Trial name; target phonological form; error; phonological form generated by the model. The script can be run using a line of code similar to the following: ./evaluatorLit -weights NAME_OF_WEIGHT_FILE -epsilon LEARNING_RATE > NAME_OF_OUTPUT_FILE

Makefile_ev & Makefile_mod: make files that can be used to compile LitModel.c & evaluatorLit.c

mapping: a table that encodes the mapping from phonological feature vector to phoneme
