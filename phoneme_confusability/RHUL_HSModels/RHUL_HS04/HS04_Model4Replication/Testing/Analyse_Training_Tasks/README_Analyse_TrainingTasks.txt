Analyse_TrainingTasks_HS04&Vecs.R:
This R script tests performance of a trained model on each word within a training corpus on any one of the four training tasks. The R script takes as input output of HS04_Test.c. The order of words in the target vector files (phoPBin.vecs; semBin.vecs) must equal the order of the target on each trial of the input files (i.e. output of HS04_Test.c). For each trial (row in the input file) it analyses whether layer activation is closer to the intended target than any other representation within the corpus. On line '20' it is necessary to define which of the five alternative methods should be used to compare the two vectors. Option 1: uses cosine similarity to compare the given vector to all semantic vectors in the given corpus; Option 2: uses cosine similarity to compare the given vector to all phonological vectors in the given corpus; Option 3: divides the given vector into 8 phoneme slots (25 units per slot), the closest (cosine similarity) phoneme is then found (from the phoneme 'mapping' file) for each slot, the final 8 phonemes are then compared to the target phoneme level representation and if all 8 slots match the item is recorded as accurately produced; Option 4: This approach is identical to option 3 but uses Euclidean distance to identify closest phonemes, this is the method detailed in HS04; Option 5: This method first rounds activations (to either 0.01 or 0.99) before comparing the resulting 'binary' vector to the target, if the target and given vector match then the item is recorded as accurately produced, this is the method detailed in HS04 for assessing performance on semantic output training tasks. The script outputs a file containing the results for each trial in the input file. The contents of the output file will depend on the analysis method selected on line 20. The first line in the output file will contain the column headings, the second line will be the arithmetic mean calculated across all rows in the results and thus the overall accuracy across the trial set (when applicable). Below are details of the information recorded in each column of the output file for each analysis method:
Option 1 & 2 Output: 'word' = trial label; 'wordD' = cosine similarity calculated between networks output and target vector; 'maxD' = cosine similarity measure for the closest item within the corpus to the network's output; 'accVec' = binary value to indicate if the network's output was closest to the target vector than any other item in the corpus.   
Option 3 & 4 Output: 'word' = trial name; 'Target' = phoneme slot based representation of the target; 'Output' = phoneme slot based representation produced by the network; 'Acc' = binary value indicating whether the phoneme level slot based representation produced by the network matches the target; 'LevDist' = levenshtein distance calculated between networks phoneme level slot based output and the target representation.
Option 5 Output:  'word' = trial label; 'accVec' = binary value to indicate whether the semantic vector produced by the network matched the target once rounded to 0.01 or 0.99.

The following files are included within this sub-folder should the data be required during analyses (all files are required by Analyse_HS04&Vecs.R):
- mapping: mapping from phonemes to binary phoneme vectors (as used in Chang, Monaghan & Welbourne, 2019)
- phoPBin.vecs: contains in full form the binary phonological feature vectors for all 6229 words
- semBin.vecs: contains in full form the binary semantic feature vectors for all 6229 words

